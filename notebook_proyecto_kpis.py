# -*- coding: utf-8 -*-
"""Notebook Proyecto KPIs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1phzyHoY6ZXBVCdLsXfGV7wne-7JYevqh

Camilo Ruiz Bermudez, Natalia Lopez Gallego, Juan Pablo Gomez Veira y Sebastian Belalcazar Mosquera
"""

import pandas as pd
from datetime import datetime
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

# URL del archivo CSV
url = 'https://drive.google.com/uc?id=1Uiqy2oX-abvxwHw8j-NtT3C9K47AESIO'

# Cargar el archivo CSV en un DataFrame
df = pd.read_csv(url)

df.head(150)

"""URL de archivo CSV de 10 tickets: https://drive.google.com/file/d/1Uiqy2oX-abvxwHw8j-NtT3C9K47AESIO/view?usp=sharing"""

# Convertir las columnas de hora a objetos datetime en formato adecuado

df["Hora radicacion (COT)"] = pd.to_datetime(df["Hora radicacion (COT)"], format="%H:%M:%S")
df["Hora de inicio de soporte"] = pd.to_datetime(df["Hora de inicio de soporte"], format="%H:%M:%S")
df["Hora de fin de soporte"] = pd.to_datetime(df["Hora de fin de soporte"], format="%H:%M:%S")

# Calcular el tiempo de resolución (TPR) en minutos

df["TPR"] = (df["Hora de fin de soporte"] - df["Hora de inicio de soporte"]).dt.total_seconds() / 60  # En minutos

# Calcular el tiempo de primera respuesta (TPPR) en minutos

df["TPPR"] = (df["Hora de inicio de soporte"] - df["Hora radicacion (COT)"]).dt.total_seconds() / 60  # En minutos

# Calcular el TPR promedio en minutos utilizando numpy
tpr_promedio = np.mean(df["TPR"])

# Calcular el TPPR promedio en minutos utilizando numpy
tppr_promedio = np.mean(df["TPPR"])

print("Tiempo Promedio de Resolución (TPR):", tpr_promedio, "minutos")
print("Tiempo Promedio de Primera Respuesta (TPPR):", tppr_promedio, "minutos")

"""##Testing V2

"""

plt.figure(figsize=(20, 8))
plt.subplot(2, 2, 1)
sns.histplot(df['Fecha de radicacion'], kde=True, bins=30, color='skyblue')
plt.title('Distribución de Fechas de Radicación')
plt.xlabel('Fechas')
plt.ylabel('Frecuencia')

plt.figure(figsize=(20, 8))
plt.subplot(2, 2, 2)
sns.histplot(df['Hora radicacion (COT)'], kde=True, bins=20, color='lightcoral')
plt.title('Distribución de Horas de Radicación (COT)')
plt.xlabel('Horas')
plt.ylabel('Frecuencia')

plt.figure(figsize=(20, 8))
plt.subplot(2, 2, 3)
sns.histplot(df['Fecha de inicio de soporte'], kde=True, bins=30, color='lightgreen')
plt.title('Distribución de Fechas de Inicio de Soporte')
plt.xlabel('Fechas')
plt.ylabel('Frecuencia')

"""##TPR TPPR"""

df['tiempo_resolucion'] = (df['Fecha de fin de soporte'] - df['Fecha de radicacion']).dt.total_seconds() / 60

df['tiempo_primera_respuesta'] = (df['Fecha de inicio de soporte'] - df['Fecha de radicacion']).dt.total_seconds() / 60


TAR = df['tiempo_resolucion'].mean()
TAPR = df['tiempo_primera_respuesta'].mean()

kpi_names = ['Tiempo Promedio de Resolución (TPR)', 'Tiempo Promedio de Primera Respuesta (TPPR)']

kpi_values = [TAR, TAPR]


colors = ['skyblue', 'lightcoral']


plt.figure(figsize=(10, 6))
plt.bar(kpi_names, kpi_values, color=colors)

plt.xlabel('KPIs')
plt.ylabel('Tiempo Promedio (minutos)')
plt.title('Comparación entre TPR y TPPR')

plt.show()